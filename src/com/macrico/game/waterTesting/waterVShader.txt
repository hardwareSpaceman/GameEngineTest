#version 400 core

in vec2 position;
in vec2 in_textureCoords;

out vec4 clipSpace;
out vec2 textureCoords;
out vec3 toCameraVector;
out vec3 fromLightVector;
out float visibility;

uniform mat4 transformationMatrix;
uniform mat4 projectionMatrix;
uniform mat4 viewMatrix;
uniform vec3 cameraPosition;
uniform vec3 lightPosition;

const float density = 0.007;
const float gradient = 1.5;
const float tiling = 40.0;

void main(void) {
    vec4 worldPosition = transformationMatrix * vec4(position.x, 0.0, position.y, 1.0);
    vec4 positionRelativeToCam = viewMatrix * worldPosition;

    clipSpace = projectionMatrix * positionRelativeToCam;
	gl_Position = clipSpace;
    textureCoords = in_textureCoords * tiling;
    toCameraVector = cameraPosition - worldPosition.xyz;
    fromLightVector = worldPosition.xyz - lightPosition;

    float distance = length(positionRelativeToCam.xyz);
    visibility = exp(-pow((distance * density), gradient));
    visibility = clamp(visibility, 0.0, 1.0);
}